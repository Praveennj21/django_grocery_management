from django.db import models

class Product(models.Model):
    product_id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=255)
    price = models.DecimalField(max_digits=10, decimal_places=2)
    quantity = models.PositiveIntegerField()
    image_path = models.ImageField(upload_to='uploads/', blank=True, null=True, default='uploads/default.jpg')
    remaining = models.PositiveIntegerField(default=0)
    def __str__(self):
        return self.name


class Bill(models.Model):
    transaction_id = models.IntegerField()
    product = models.IntegerField()
    quantity = models.IntegerField()
    amount = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f"{self.transaction_id} - {self.product.name}"
class TotalAmount(models.Model):
    transaction_id = models.IntegerField()
    total = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f'Transaction {self.transaction_id} - Total: {self.total}'

class User(models.Model):
    username = models.CharField(max_length=200)
    password = models.CharField(max_length=200)
    email = models.EmailField(max_length=200)

    def __str__(self):
        return self.username

class Shop(models.Model):
    name = models.CharField(max_length=20)
    shop_id = models.AutoField(primary_key=True)
    address = models.CharField(max_length=20)
    owner = models.CharField(max_length=20)
    manager = models.CharField(max_length=20)
    phone = models.IntegerField()
    license_no = models.CharField(max_length=20)

    def __str__(self):
        return self.name

class Employee(models.Model):
    emp_id = models.CharField(max_length=20, primary_key=True)
    shop = models.ForeignKey(Shop, on_delete=models.CASCADE)
    name = models.CharField(max_length=20)
    phone = models.IntegerField()
    address = models.CharField(max_length=200)
    shop_name = models.CharField(max_length=200)

    def __str__(self):
        return self.name
        
        
        
        product = models.ForeignKey(Product, on_delete=models.CASCADE)


        def get_product(request):
    product_id = request.GET.get('id')
    try:
        product = Product.objects.get(id=product_id)
        data = {
            'name': product.name,
            'price': product.price
        }
        return JsonResponse(data)
    except Product.DoesNotExist:
        return JsonResponse({'error': 'Product not found'}, status=404)

        null=True,blank=True

        from django.db import models

# main/models.py
from django.db import models

from django.db import models

class Product(models.Model):
    name = models.CharField(max_length=100,null=True,blank=True)
    price = models.IntegerField()
    quantity = models.IntegerField()
    remaining = models.IntegerField(default=0)  # Set a default value here
   

    def __str__(self):
        return self.name

class Bill(models.Model):
    transaction_id = models.IntegerField()
    product = models.IntegerField(null=True,blank=True)
    name = models.CharField(max_length=100,null=True,blank=True)
    quantity = models.IntegerField(null=True,blank=True)
    amount= models.IntegerField(null=True,blank=True)

    def __str__(self):
        return f'{self.name} - {self.transaction_id}'

class TotalAmount(models.Model):
    transaction_id = models.IntegerField()
    total = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f'Transaction {self.transaction_id} - Total: {self.total}'


class User(models.Model):
    username = models.CharField(max_length=200)
    password = models.CharField(max_length=200)
    email = models.EmailField(max_length=200)

    def __str__(self):
        return self.username


class Shop(models.Model):
    name = models.CharField(max_length=20)
    shop_id = models.AutoField(primary_key=True)
    address = models.CharField(max_length=20)
    owner = models.CharField(max_length=20)
    manager = models.CharField(max_length=20)
    phone = models.IntegerField()
    license_no = models.CharField(max_length=20)

    def __str__(self):
        return self.name


class Employee(models.Model):
    emp_id = models.CharField(max_length=20, primary_key=True)
    shop = models.ForeignKey(Shop, on_delete=models.CASCADE)
    name = models.CharField(max_length=20)
    phone = models.IntegerField()
    address = models.CharField(max_length=200)
    shop_name = models.CharField(max_length=200)

    def __str__(self):
        return self.name

